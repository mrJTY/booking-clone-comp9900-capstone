Harris Phan's diary (z3415157)

Week 1
Group is formed and we were trying to look for one more member to no avail. Github and Jira accounts were created. Started off using Amazon amplify with Justin starting it all off
thanks to Justin. Note that my Github username is statsgrad297.

Week 2
Justin implemented tasks for Jira and I got to work on all of my sections, which included the design draft doc (the proposal). Got started on the design doc. Got to work on creating the hashing for the password. 
No password should be exposed in a POST statement, which is what happened. During the team meeting on Tuesday, the tutor said they needed to be able to execute the code on their end as
well, which means we reverted to a flask setup instead of an AWS setup which was full cloud. Used bash and python scripts to start up the back end and test it. 

Week 3
Started doing the proposal, especially on the user stories part. Looked at the Jira backlog for all the list of possible user stories. Made descriptions on the user stories, looked at examples.
Discussed with the team more potential use cases for the project, such as the followed and followers implementation and the NLP-based one. The others worked on the
more technical parts of the proposal. Proposal is now finished.

Decided on roles for the project. Justin setting up the backend + the database, Vidan doing the frontend and I supported Justin in the backend. Saksham was going to work 
on the recommender system. 

Week 4
Created update and delete (CRUD) for the resource listings. User can now update and delete listings with some guidance from Justin.  
Learnt how to create unit tests for the listings, especially for update and delete. This way we know that we are on the right track. Making unit tests came 
with the help of Justin as well, which proved to be very useful.  

Week 5
Went through extensive meetings, and now Blue Sprint 2 is finished (see Jira). Presented the demonstration in that week with the first 2 user stories and showed that it was satisfied 
to Iwan. Then implemented a basic resource search function which returns the keywords for the listing name and its description. Did not take into consideration the category yet, 
but that can be done later on. 

Week 6 
The start of Blue Sprint 3 and I was assigned the update/delete endpoints for both the bookings and availabilities.
Creating the endpoints for the bookings was slightly more trickier than the listings as bookings could not be cancelled/deleted less then 3 days out and there was a 10 hour limit on 
bookings each calendar month, which needed to be taken into consideration. 

Any new booking which makes the total booked time in that calendar month past 10 hours will not be allowed.

So when updating the booking, it also cannot be changed to a different timeslot if the original booking is less than 3 days out. Also any updated booking which makes
the total booked time in that calendar month past 10 hours will also not be allowed. 

Also created a simple search functionality (so far), where if the search keyword was like the given name and description it will return the list of venues. Proposed the
latitude and longitude framework but that is yet to come and it felt like a nice to have. 

Week 7
Set up the endpoints for the ratings (Update Ratings and Delete Ratings). Changed the availabilities format from unix epoch time in seconds to unix epoch time in milliseconds, 
which was required for the front end to work in terms of the dates and the times. Assumed we can multiply by 1000. 

Mentioned that a separate followers endpoint was required since it involved a separate data model.

Set up the search functionality for the users which so far is based off a non-case sensitive like match. Considered using regex statements but will keep it simple for now
and optimise it later with Justin on the backend. 

Finally, set up the recommender system endpoint and the data setup for it. Built the foundation of the recommender and guided Saksham through this. Somehow managed to turn
a database table into a pandas dataframe and then back to json format. Still a work in progress. 
Set up the delete function for the followers endpoint although it was a bit confusing. 

Week 8
Justin helped with the Search listings functionality by improving and optimising it. Included  Looked at the spec closely and we needed to consider availabilities in the search (i.e.
only those which were available).  Furthermore I implemented the search by username on the backend, and this required a SQL query using a like statement. 

Also contributed to the retrospective discussion with the group straight after our demonstration that week. Considered that we need to be efficient as we approach the busiest time of
the term. Working smarter not harder. On the other hand, mentioned the improvement of using threads on Slack and ticking off tasks in Jira as soon as that part was done. 

Furthermore towards the end of the week, implemented the profile picture functionality on the backend, which means a user can put in his/her profile picture at anytime. Also
has the ability to return all the users by username in the user search.  

Week 9
The program was largely done and I started writing up on the report. Since the problem statements and the architecture came from the proposal already I largely focused on the use cases
that were presented in the proposal. I wrote up a walkthrough on every use case provided (for example, how to make a listing, how to book, how to make a rating), and showing
that it satisifies  the criteria in the spec. This is combined with screenshots to make the point more clearer. 

Also put down the challenges that were implemented in the app (especially the SQL engine), and part of the justification for using the tools used the recommender system.

Showed up for the practice rehersal with the group on Saturday, and asked Iwan some questions about the report. 

Week 10
Made some last minute changes as we realised that we missed putting in the types of resources they provide at registration time. Successfully made the last minute fix at the backend,
while Vidan got the feature working on the frontend. We got this done just before the software quality part was due, which was a relief.

Also made more edits on the Project Report, such as putting figure numbers on the screenshots, added in more things for the Bookit spec - functional mapping which was a separate
requirement. Changed the screenshots as the previous ones were out of date, as the frontend looked different. Eventually submitted the report on time. 

Presented the 'review' part in the final demonstration, while others did the other parts. Demo went quite smoothly, and we were able to make responses in the Q&A. Project is completed.

