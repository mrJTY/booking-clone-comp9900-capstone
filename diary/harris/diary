Harris Phan's diary (z3415157)

Week 1
Group is formed and we were trying to look for one more member to no avail. Github and Jira accounts were created. Started off using Amazon amplify with Justin starting it all off
thanks to Justin.

Week 2
Justin implemented tasks for Jira and I got to work on all of my sectins, which included the design draft doc (the proposal). Got started on the design doc Got to work on creating the hashing for the password. 
No password should be exposed in a POST statement, which is what happened. During the team meeting on Tuesday, the tutor said they needed to be able to execute the code on their end as
well, which means we reverted to a flask setup instead of an AWS setup which was full cloud. Used bash and python scripts to start up the back end and test it. 

Week 3
Started doing the proposal, especially on the user stories part. Looked at the Jira backlog for all the list of possible user stories. Made descriptions on the user stories, looked at examples.
Discussed with the team more potential use cases for the project, such as the followed and followers implementation and the NLP-based one. Proposal is now finished. 

Week 4
Created update and delete (CRUD) for the resource listings. User now has the ability to update and delete listings. 
Learnt how to create unit tests for the listings, especially for update and delete. This way we know that we are on the right track.

Week 5
Went through extensive meetings, and now Blue Sprint 2 is finished (see Jira). Presented the Demonstration in that week with the first 2 user stories and showed that it was done 
to Iwan. Then implemented a basic resource search function which returns the keywords for the listing name and its description.

Week 6 
The start of Blue Sprint 3 and I was assigned the update/delete endpoints for both the bookings and avaliabilities.
Creating the endpoints for the bookings was slightly more trickier than the listings as bookings could not be cancelled/deleted less then 3 days out and there was a 10 hour limit on 
bookings each calendar month. 

Any new booking which pushes the calendar month past 10 hours will not be allowed.

So when updating the booking, it cannot be changed to a different timeslot if the original booking is less than 3 days out. Also any updated booking which pushes the calendar month limit
past 10 hours will also not be allowed. 

Also created a simple search functionality (so far), where if the search keyword was like the given name and description it will return the list of venues. Proposed the
latitude and longitude framework but that is yet to come. 

Week 7
Set up the endpoints for the ratings (Update Ratings and Delete Ratings). Changed the avaliabilities format from unix epoch time in seconds to unix epoch time in milliseconds, 
which was required for the front end to work in terms of the dates and the times.

Mentioned that a separate followers endpoint was required since it involved a separate data model.

Set up the search functionality for the users which so far is based off a non-case sensitive like match. Considered using regex statements but will keep it simple for now
and optimise it later

Finally, set up the recommender system endpoint and the data setup for it. Still a work in progress. 
Set up the delete function for the followers endpoint.

Week 8
Justin helped out with the Search listings functionality by improving and optimising it. Looked at the spec closely and we needed to consider availabilities in the search (i.e.
only those which were available).  Furthermore I implemented the search by username on the backend, and this required a SQL query using a like statement. 

Also contributed to the retrospective discussion with the group straight after our demonstration. Considered that we need to be efficient as we approach the busiest time of
the semester. Working smarter not harder. On the other hand, mentioned the improvement of using threads on Slack and ticking off tasks in Jira as soon as that part was done. 

Furthermore towards the end of the week, implemented the profile picture functionality on the backend, which means a user can put in his/her profile picture at anytime. Also
has the ability to return all their listings by username. 

Week 9
The program was largely done and I started writing up on the report. Since the problem statements, the architecture came from the proposal already I largely focused on the use cases
that were presented in the proposal. I wrote up a walkthrough on every use case provided (for example, how to make a listing, how to book, how to make a rating), and showing
that it satisifies the criteria in the spec. 

Also put down the challenges that were implemented in the app (especially the SQL engine), and part of the justification for using the tools used the recommender system.

Showed up for the practice rehersal on Saturday, and asked Iwan some questions about the report. 
